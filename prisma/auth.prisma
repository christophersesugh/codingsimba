model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Session {
  id String @id @default(ulid())

  expirationDate DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  @@index([userId])
}

model Verification {
  id        String   @id @default(ulid())
  createdAt DateTime @default(now())

  type      VerificationType // e.g email, phone (Type of verification)
  target    String // e.g user's email or phone number (What we are verifying)
  secret    String // The secret key used to generate the otp
  algorithm String //The algorithm used to generate the otp
  digits    Int // The number of digits in the otp
  period    Int // The number of seconds or minutes the otp is valid for
  charSet   String // The valid characters for the otp
  expiresAt DateTime? // When is safe to delete the verification

  @@index([type, target])
}

enum VerificationType {
  EMAIL
  TWO_FA
  PASSWORD_RESET
}

model Connection {
  id           String @id @default(ulid())
  providerName String
  providerId   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  @@unique([providerName, providerId])
  @@unique([userId])
}
