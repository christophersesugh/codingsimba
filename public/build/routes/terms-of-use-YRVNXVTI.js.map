{
  "version": 3,
  "sources": ["../../../app/routes/terms-of-use.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/terms-of-use.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/terms-of-use.tsx\");\n  import.meta.hot.lastModified = \"1706197824014.4092\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/server-runtime\";\nimport { metaFn } from \"~/utils/meta\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { Markdown } from \"~/components/mdx\";\nimport { Container } from \"~/components/container\";\nimport { getPage } from \"~/utils/page.server\";\nexport const meta = metaFn;\nexport async function loader() {\n  const content = getPage(\"terms-of-use\");\n  return json({\n    content\n  });\n}\nexport default function TermsOfUse() {\n  _s();\n  const {\n    content\n  } = useLoaderData();\n  return <Container className=\"max-w-3xl flex flex-col items-center\">\n      <h2 className=\"text-2xl text-slate-800 dark:text-slate-100 my-6 underline underline-offset-4\">\n        Terms of use\n      </h2>\n      <div className=\"dark:text-slate-300 text-slate-600\">\n        <Markdown source={content} />\n      </div>{\" \"}\n    </Container>;\n}\n_s(TermsOfUse, \"t8fJA4Kz9OOMVddc0s1pdl7daiI=\", false, function () {\n  return [useLoaderData];\n});\n_c = TermsOfUse;\nvar _c;\n$RefreshReg$(_c, \"TermsOfUse\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,kBAAwB;AAclB;AAvCN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kCAAoC,EAAE;AAAA,EAC/E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6B;AAC7B,cAAY,IAAI,eAAe;AACjC;AASO,IAAM,OAAO;AAOL,SAAR,aAA8B;AACnC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,aAAU,WAAU,wCACxB;AAAA,uDAAC,QAAG,WAAU,iFAAgF,4BAA9F;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,SAAI,WAAU,sCACb,6DAAC,YAAS,QAAQ,WAAlB;AAAA;AAAA;AAAA;AAAA,WAA2B,KAD7B;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAAO;AAAA,OANJ;AAAA;AAAA;AAAA;AAAA,SAOL;AACJ;AACA,GAAG,YAAY,gCAAgC,OAAO,WAAY;AAChE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
